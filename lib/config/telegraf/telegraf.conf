[global_tags]
region = "<REGION>"
region_zone = "<AVAILABILITY_ZONE>"
instance_id="<INSTANCE_ID>"
private_ip="<PRIVATE_IP>"
public_ip="<PUBLIC_IP>"
subnet_id="<SUBNET_ID>"
host = "<HOSTNAME>"
hostname = "<HOSTNAME>"
vpc_id = "<VPC_ID>"


[agent]
interval = "10s"
round_interval = true
metric_batch_size = 1000
metric_buffer_limit = 10000
collection_jitter = "0s"
flush_interval = "10s"
flush_jitter = "0s"
precision = ""
debug = false
quiet = false
logfile = ""
omit_hostname = false

[[outputs.influxdb]]
urls = ["http://127.0.0.1:8428"]
database = "telegraf"

[[inputs.conntrack]]
files = ["ip_conntrack_count","ip_conntrack_max","nf_conntrack_count","nf_conntrack_max"]
dirs = ["/proc/sys/net/ipv4/netfilter","/proc/sys/net/netfilter"]

[[inputs.cpu]]
percpu = true
totalcpu = true
collect_cpu_time = false
report_active = false

[[inputs.exec]]
commands = ["/etc/telegraf/monitoring-scripts/wax-node-monitoring.sh"]
daa_format = "influx"
# Read interrupts
[[inputs.interrupts]]

# Read sysctl metrics
[[inputs.linux_sysctl_fs]]

# Read internal metrics
[[inputs.internal]]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]

# Read metrics about memory usage
[[inputs.mem]]

# Get the number of processes and group them by status
[[inputs.processes]]

# Read metrics about swap memory usage
[[inputs.swap]]

# Read metrics about system load & uptime
[[inputs.system]]

# Read metrics about disk usage by mount point
[[inputs.disk]]
ignore_fs = ["tmpfs", "devtmpfs", "devfs"]

# Read metrics about network usage
[[inputs.net]]

# Read metrics about network usage
[[inputs.netstat]]

# Read metrics about disk io usage
[[inputs.diskio]]

# Read metrics about snmp usage
[[inputs.nstat]]
proc_net_netstat = "/proc/net/netstat"
proc_net_snmp = "/proc/net/snmp"
proc_net_snmp6 = "/proc/net/snmp6"
dump_zeros       = true

# Read statsd statistics
[[inputs.statsd]]
protocol = "udp"
max_tcp_connections = 250
tcp_keep_alive = false
service_address = "localhost:8125"
delete_gauges = true
delete_counters = true
delete_sets = true
delete_timings = true
percentiles = [90.0]
metric_separator = "_"
datadog_extensions = true
allowed_pending_messages = 10000
percentile_limit = 1000
